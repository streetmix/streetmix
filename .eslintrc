{
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "ecmaVersion": 6,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "env": {
    "browser": true,
    "cypress/globals": true,
    "node": true,
    "es6": true,
    "mocha": true
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "plugins": ["react", "cypress", "react-hooks"],
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "standard",
    "standard-jsx",
    "standard-react",
    "plugin:import/errors",
    "plugin:import/warnings"
  ],
  "rules": {
    "import/no-unresolved": 0,
    "import/order": 1,
    "jsx-quotes": ["error", "prefer-double"],
    "react/jsx-boolean-value": ["error", "always"],
    "react/jsx-no-bind": 0,
    "no-restricted-globals": [
      "error",
      {
        "name": "isNaN",
        "message": "Use Number.isNaN() instead of the global isNan()."
      },
      {
        "name": "isFinite",
        "message": "Use Number.isFinite() instead of the global isFinite()."
      },
      {
        "name": "parseInt",
        "message": "Use Number.parseInt() instead of the global parseInt()."
      },
      {
        "name": "parseFloat",
        "message": "Use Number.parseFloat() instead of the global parseFloat()."
      }
    ],
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn"
  }
}
