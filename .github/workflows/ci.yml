name: Continuous integration (CI) testing

on: [push, pull_request]

jobs:
  # Separate linting as a parallel test from unit/integration testing because
  # it does not need to be run in multiple environments.
  lint:
    name: Lint
    runs-on: ubuntu-latest
    env:
      CYPRESS_INSTALL_BINARY: "0"
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    # Use the current LTS version of Node.js
    - name: Use Node.js 16
      uses: actions/setup-node@v2
      with:
        node-version: '16'
    - run: npm ci
    - run: npm run lint

  test:
    name: Unit and integration tests
    runs-on: ubuntu-latest
    container: node:lts-buster
    strategy:
      # Use current LTS and later versions of Node.js if present
      # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
      matrix:
        node-version: [16.x, 17.x]
    env:
      NODE_ENV: test
      CYPRESS_INSTALL_BINARY: "0"
      PGHOST: postgres
      PGUSER: postgres
      PGPASSWORD: postgres
      PGDATABASE: streetmix_test
    services:
      postgres:
        image: postgis/postgis
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: streetmix_test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        # Codecov reporting needs fetch-depth > 1
        fetch-depth: 2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
      # Ignore scripts to prevent husky installation, which can break
    - run: npm ci --ignore-scripts
    - name: Seed test database
      run: npm run db:migrate
    - name: Run tests
      run: npm run jest
    - name: Report code coverage
      uses: codecov/codecov-action@v1

  cypress:
    name: End-to-end (E2E) tests
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node14.17.0-chrome91-ff89
      # To run Firefox, use non-root user (Firefox security restriction)
      # https://github.com/cypress-io/github-action#firefox
      options: --user 1001
    env:
      # We need placeholder API keys to mock some third party integrations
      PELIAS_API_KEY: ge-iampelias
      PELIAS_HOST_NAME: dummy.pelias.com
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # Install NPM dependencies, cache them correctly
      # and run all Cypress tests
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          start: npm start
          wait-on: 'http://localhost:8000'
          # Specify browser since container image is compiled with Firefox
          # We can (and should) also test in Chrome since it's a popular
          # browser, so a future improvement is to test on multiple browsers
          browser: firefox
